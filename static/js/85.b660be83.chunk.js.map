{"version":3,"file":"static/js/85.b660be83.chunk.js","mappings":"sKACA,MAA4B,0B,SCCfA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OAAO,iBAAMC,UAAWC,EAAjB,SAAiCF,GACzC,C,+ECGYG,EAAU,WAKrB,MAAO,CACLC,YALiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAM7BC,cALmBF,EAAAA,EAAAA,IAAYG,EAAAA,IAM/BC,MALWJ,EAAAA,EAAAA,IAAYK,EAAAA,IAO1B,C,0HChBD,EAAsB,oBAAtB,EAAuD,2B,0CCE1CC,EAAS,SAAC,GAKhB,IAAD,IAJJC,SAAAA,OAII,aAHJC,KAAAA,OAGI,MAHG,SAGH,EAFJb,EAEI,EAFJA,SACGc,GACC,YACJ,OACE,mCACEb,WAAWc,EAAAA,EAAAA,GAAKb,GAAD,UACZA,EAAiBU,IAEpBC,KAAMA,GACFC,GALN,aAOGd,IAGN,ECnBD,EAA0B,8B,oBCCbgB,EAAc,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,EAGnBC,EAAqB,SAAAH,GAAK,OAAIA,EAAMI,QAAQC,MAAlB,EAE1BC,EAAqB,SAACN,GACnC,IAAMC,EAAQF,EAAYC,GAGxB,OAFmBG,EAAmBH,IAGpC,KAAKO,EAAAA,EAAAA,OACH,OAAON,EAAMO,QAAO,SAAAC,GAAI,OAAKA,EAAKC,SAAV,IAC1B,KAAKH,EAAAA,EAAAA,UACH,OAAON,EAAMO,QAAO,SAAAC,GAAI,OAAGA,EAAKC,SAAR,IAC1B,QACE,OAAOT,EAEZ,EAEYU,EAAkB,SAAAX,GAG7B,OAFcD,EAAYC,GAEbY,QAAO,SAACC,EAAKJ,GAMxB,OALIA,EAAKC,UACPG,EAAIH,WAAY,EAEhBG,EAAIC,QAAS,EAERD,CACR,GAAE,CAAEC,OAAQ,EAAGJ,UAAW,GAC5B,E,UCzBYK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXT,GAASpB,EAAAA,EAAAA,IAAYe,GAErBe,EAAqB,SAAAV,GAAM,OAAGQ,GAASG,EAAAA,EAAAA,GAAgBX,GAA5B,EAGjC,OACE,iBAAKxB,UAAWC,EAAhB,WACE,SAACS,EAAD,CAAQ0B,QAAS,kBAAMF,EAAmBX,EAAAA,EAAAA,IAAzB,EACfZ,SAAUa,IAAWD,EAAAA,EAAAA,IADvB,kBAEA,SAACb,EAAD,CAAQ0B,QAAS,kBAAMF,EAAmBX,EAAAA,EAAAA,OAAzB,EACfZ,SAAUa,IAAWD,EAAAA,EAAAA,OADvB,qBAEA,SAACb,EAAD,CAAQ0B,QAAS,kBAAMF,EAAmBX,EAAAA,EAAAA,UAAzB,EACfZ,SAAUa,IAAWD,EAAAA,EAAAA,UADvB,yBAIL,ECxBD,EAAuB,0BCIVc,EAAc,WAEzB,IAAMC,GAAQlC,EAAAA,EAAAA,IAAYuB,GAG1B,OACE,4BACE,eAAG3B,UAAWC,EAAd,qBAAkCqC,EAAMR,WACxC,eAAG9B,UAAWC,EAAd,wBAAqCqC,EAAMZ,eAGhD,ECfD,EAA0B,wBAA1B,EAA4D,wBAA5D,EAA4F,sBCG/Ea,EAAS,WACpB,OACE,oBAAQvC,UAAWC,EAAnB,WACE,qBAASD,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,oBACA,SAACoC,EAAD,QAEF,qBAASrC,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,+BACA,SAAC8B,EAAD,SAIP,EChBD,EAAuB,uBAAvB,EAAsD,wB,SCIzCS,EAAW,WAEtB,IAAMR,GAAWC,EAAAA,EAAAA,MAWjB,OACE,kBAAMjC,UAAWC,EAAUwC,SAVR,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,OAEnBb,GAASc,EAAAA,EAAAA,IAAQF,EAAKG,SAASC,KAAKC,QAEpCL,EAAKM,OACN,EAGC,WACE,kBACElD,UAAWC,EACXW,KAAK,OACLuC,KAAK,OACLC,YAAY,wBAEd,SAAC1C,EAAD,CAAQE,KAAK,SAAb,wBAGL,E,UC5BD,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAgF,kBAAhF,EAA6G,uBCIhGyC,EAAO,SAAC,GAAc,IAAZ5B,EAAW,EAAXA,KAEfO,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKjC,UAAWC,EAAhB,WACE,kBACEW,KAAK,WACL0C,SAPc,kBAAMtB,GAASuB,EAAAA,EAAAA,IAAW9B,GAA1B,EAQdzB,UAAWC,EACXuD,QAAS/B,EAAKC,aAEhB,cAAG1B,UAAWC,EAAd,SAAyBwB,EAAKuB,QAC9B,mBAAQhD,UAAWC,EACjBmC,QAfc,kBAAMJ,GAASyB,EAAAA,EAAAA,IAAWhC,EAAKiC,IAA/B,EAchB,UAGE,SAAC,MAAD,CAASC,KAAM,SAItB,EC7BD,EAAuB,uBAAvB,EAAyD,2BCK5CC,EAAW,WACtB,IAAM3C,GAAQb,EAAAA,EAAAA,IAAYkB,GAE1B,OACE,eAAItB,UAAWC,EAAf,SACGgB,EAAM4C,KAAI,SAAApC,GAAI,OACb,eAAIzB,UAAWC,EAAf,UACE,SAACoD,EAAD,CAAM5B,KAAMA,KADoBA,EAAKiC,GAD1B,KAOpB,E,8BCcD,EAtBc,WACZ,IAAM1B,GAAWC,EAAAA,EAAAA,MACV9B,GAAaD,EAAAA,EAAAA,KAAbC,WAUP,OARA2D,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAIvB,OAFAhC,GAASiC,EAAAA,EAAAA,IAAWF,IAEb,kBAAMA,EAAWG,OAAjB,CACR,GAAE,CAAClC,KAEG,UAAClC,EAAA,EAAD,YACAK,IACH,SAAC,KAAD,CAAUgE,GAAG,IAAIC,SAAS,KAE1B,SAAC7B,EAAD,KACA,SAACC,EAAD,KACA,SAACoB,EAAD,MAEL,C,wGC9BM,IAAMnD,EAAa,SAAAO,GAAK,OAAIA,EAAMqD,KAAK7D,IAAf,EAClBH,EAAmB,SAAAW,GAAK,OAAIA,EAAMqD,KAAKlE,UAAf,EACxBI,EAAqB,SAAAS,GAAK,OAAGA,EAAMqD,KAAK/D,YAAd,C","sources":["webpack://react-homework-template/./src/components/Layout/Layout.module.css?3701","components/Layout/Layout.js","hooks/useAuth.js","webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://react-homework-template/./src/components/StatusFilter/StatusFilter.module.css?8bce","redux/selectors.js","components/StatusFilter/StatusFilter.js","webpack://react-homework-template/./src/components/TaskCounter/TaskCounter.module.css?6054","components/TaskCounter/TaskCounter.js","webpack://react-homework-template/./src/components/AppBar/AppBar.module.css?5623","components/AppBar/AppBar.js","webpack://react-homework-template/./src/components/TaskForm/TaskForm.module.css?c90e","components/TaskForm/TaskForm.js","webpack://react-homework-template/./src/components/Task/Task.module.css?22e8","components/Task/Task.js","webpack://react-homework-template/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.js","pages/Tasks.js","redux/auth/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Layout_container__dVyML\"};","import css from \"./Layout.module.css\";\n\nexport const Layout = ({ children }) => {\n  return <main className={css.container}>{children}</main>;\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from 'redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshing,\n    user,\n  };\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\",\"isSelected\":\"Button_isSelected__-6JYv\"};","import clsx from \"clsx\";\nimport css from \"./Button.module.css\";\n\nexport const Button = ({\n  selected = false,\n  type = \"button\",\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"StatusFilter_wrapper__gblkH\"};","import { statusFilters } from \"./constatns\";\n\nexport const selectTasks = state => state.tasks.items\nexport const selectIsActive = state => state.tasks.isActive\nexport const selectError = state => state.tasks.error\nexport const selectStatusFilter = state => state.filters.status;\n\nexport const selectVisibleTasks = (state) => {\nconst tasks = selectTasks(state)\nconst statusFilter = selectStatusFilter(state)\n\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);  \n    case statusFilters.completed:\n      return tasks.filter(task=> task.completed)\n    default:\n      return tasks\n  }\n}\n\nexport const selectTaskCount = state => {\n  const tasks = selectTasks(state)\n\n  return tasks.reduce((acc, task) => {\n    if (task.completed) {\n      acc.completed +=1\n    } else {\n      acc.active +=1\n    }\n    return acc\n  }, { active: 0, completed: 0 })\n}","import { Button } from \"components/Button/Button\";\nimport css from \"./StatusFilter.module.css\";\nimport { statusFilters } from \"redux/constatns\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { selectStatusFilter } from \"redux/selectors\";\nimport { setStatusFilter } from \"redux/filtersSlice\";\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch()\n\n  const filter = useSelector(selectStatusFilter)\n\n  const handleFilterChange = filter =>dispatch(setStatusFilter(filter))\n\n  \n  return (\n    <div className={css.wrapper}>\n      <Button onClick={() => handleFilterChange(statusFilters.all)}\n        selected={filter === statusFilters.all}>All</Button>\n      <Button onClick={() => handleFilterChange(statusFilters.active)}\n        selected={filter === statusFilters.active}>Active</Button>\n      <Button onClick={() => handleFilterChange(statusFilters.completed)}\n        selected={filter === statusFilters.completed}>Completed</Button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"TaskCounter_text__K9ECF\"};","import css from \"./TaskCounter.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { selectTaskCount } from \"redux/selectors\";\n\n\nexport const TaskCounter = () => {\n\n  const count = useSelector(selectTaskCount)\n\n\n  return (\n    <div>\n      <p className={css.text}>Active: { count.active }</p>\n      <p className={css.text}>Completed: { count.completed }</p>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AppBar_wrapper__Ut-g+\",\"section\":\"AppBar_section__9m-LZ\",\"title\":\"AppBar_title__nh0UF\"};","import { StatusFilter } from \"components/StatusFilter/StatusFilter\";\nimport { TaskCounter } from \"components/TaskCounter/TaskCounter\";\nimport css from \"./AppBar.module.css\";\n\nexport const AppBar = () => {\n  return (\n    <header className={css.wrapper}>\n      <section className={css.section}>\n        <h2 className={css.title}>Tasks</h2>\n        <TaskCounter />\n      </section>\n      <section className={css.section}>\n        <h2 className={css.title}>Filter by status</h2>\n        <StatusFilter />\n      </section>\n    </header>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskForm_form__LZ0D1\",\"field\":\"TaskForm_field__3Hftx\"};","import { Button } from \"components/Button/Button\";\nimport css from \"./TaskForm.module.css\";\nimport { addTask } from 'redux/operations';\nimport { useDispatch } from \"react-redux\";\n\nexport const TaskForm = () => {\n\n  const dispatch = useDispatch()\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.target;\n\n    dispatch(addTask(form.elements.text.value))\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter task text...\"\n      />\n      <Button type=\"submit\">Add task</Button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__zvx3s\",\"text\":\"Task_text__IwwM2\",\"btn\":\"Task_btn__5Zeie\",\"checkbox\":\"Task_checkbox__XsrPA\"};","import { MdClose } from \"react-icons/md\";\nimport css from \"./Task.module.css\";\nimport { deleteTask, toggleTask } from \"redux/operations\";\nimport { useDispatch } from \"react-redux\";\n\nexport const Task = ({ task }) => {\n\n  const dispatch = useDispatch()\n\n  const handleCLick = () => dispatch(deleteTask(task.id))\n\n  const handleToggle =() => dispatch(toggleTask(task))\n\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        onChange={handleToggle}\n        className={css.checkbox}\n        checked={task.completed}\n      />\n      <p className={css.text}>{task.text}</p>\n      <button className={css.btn}\n        onClick={handleCLick}\n      >\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__Q1M-x\",\"listItem\":\"TaskList_listItem__XsStd\"};","import { Task } from \"components/Task/Task\";\nimport css from \"./TaskList.module.css\";\nimport { useSelector } from \"react-redux\";\nimport {selectVisibleTasks} from \"redux/selectors\";\n\n\nexport const TaskList = () => {\n  const tasks = useSelector(selectVisibleTasks)\n\n  return (\n    <ul className={css.list}>\n      {tasks.map(task => (\n        <li className={css.listItem} key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Layout } from 'components/Layout/Layout';\nimport { AppBar } from 'components/AppBar/AppBar';\nimport { TaskForm } from 'components/TaskForm/TaskForm';\nimport { TaskList } from 'components/TaskList/TaskList';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchTasks } from 'redux/operations';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from 'hooks/useAuth';\n\nconst Tasks = () => {\n  const dispatch = useDispatch();\n  const {isLoggedIn} =useAuth()\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    dispatch(fetchTasks(controller));\n\n    return () => controller.abort();\n  }, [dispatch]);\n    \n  return <Layout>\n       {!isLoggedIn && (\n      <Navigate to=\"/\" replace={true}/>\n        )}\n      <AppBar />\n      <TaskForm />\n      <TaskList />\n    </Layout>\n}\n\nexport default Tasks","export const selectUser = state => state.auth.user\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn\nexport const selectIsRefreshing = state=> state.auth.isRefreshing"],"names":["Layout","children","className","css","useAuth","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectIsRefreshing","user","selectUser","Button","selected","type","otherProps","clsx","selectTasks","state","tasks","items","selectStatusFilter","filters","status","selectVisibleTasks","statusFilters","filter","task","completed","selectTaskCount","reduce","acc","active","StatusFilter","dispatch","useDispatch","handleFilterChange","setStatusFilter","onClick","TaskCounter","count","AppBar","TaskForm","onSubmit","event","preventDefault","form","target","addTask","elements","text","value","reset","name","placeholder","Task","onChange","toggleTask","checked","deleteTask","id","size","TaskList","map","useEffect","controller","AbortController","fetchTasks","abort","to","replace","auth"],"sourceRoot":""}