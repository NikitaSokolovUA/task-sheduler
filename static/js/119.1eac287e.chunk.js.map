{"version":3,"file":"static/js/119.1eac287e.chunk.js","mappings":"uKACA,MAA4B,0B,SCCfA,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OAAO,iBAAMC,UAAWC,EAAjB,SAAiCF,GACzC,C,+ECGYG,EAAU,WAKrB,MAAO,CACLC,YALiBC,EAAAA,EAAAA,IAAYC,EAAAA,IAM7BC,cALmBF,EAAAA,EAAAA,IAAYG,EAAAA,IAM/BC,MALWJ,EAAAA,EAAAA,IAAYK,EAAAA,IAO1B,C,iHCRKC,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,MAAOF,EAAAA,KAAaE,MAAM,iBAAiBC,SAAS,YACpDC,SAAUJ,EAAAA,KAAaG,WAAWE,IAAI,EAAG,mBAkC7C,UA/Bc,WACV,IAAOb,GAAaD,EAAAA,EAAAA,KAAbC,WACDc,GAAWC,EAAAA,EAAAA,MAUjB,OAAO,UAAC,IAAD,WACFf,IAAc,SAAC,KAAD,CAAUgB,GAAG,SAASC,SAAS,KAC9C,SAAC,KAAD,CACIC,cAZc,CAClBR,MAAO,GACPE,SAAU,IAWNO,iBAAkBZ,EAClBa,SAVa,SAACF,EAAD,GAAmC,IAAjBG,EAAgB,EAAhBA,UACnCP,GAASQ,EAAAA,EAAAA,IAAMJ,IACfG,GACH,EAIG,UAII,UAAC,KAAD,YACI,kCACA,SAAC,KAAD,CAAOE,KAAK,QAAQC,KAAK,WACzB,SAAC,KAAD,CAAcA,KAAK,WACnB,qCACA,SAAC,KAAD,CAAOD,KAAK,OAAOC,KAAK,cACxB,SAAC,KAAD,CAAcA,KAAK,cACnB,mBAAQD,KAAK,SAAb,2BAIf,C,wGC3CM,IAAMjB,EAAa,SAAAmB,GAAK,OAAIA,EAAMC,KAAKrB,IAAf,EAClBH,EAAmB,SAAAuB,GAAK,OAAIA,EAAMC,KAAK1B,UAAf,EACxBI,EAAqB,SAAAqB,GAAK,OAAGA,EAAMC,KAAKvB,YAAd,C","sources":["webpack://react-homework-template/./src/components/Layout/Layout.module.css?3701","components/Layout/Layout.js","hooks/useAuth.js","pages/LogIn.js","redux/auth/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Layout_container__dVyML\"};","import css from \"./Layout.module.css\";\n\nexport const Layout = ({ children }) => {\n  return <main className={css.container}>{children}</main>;\n};\n","import { useSelector } from 'react-redux';\nimport {\n  selectUser,\n  selectIsLoggedIn,\n  selectIsRefreshing,\n} from 'redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshing,\n    user,\n  };\n};","import { Field, Formik, Form, ErrorMessage } from \"formik\"\nimport * as yup from 'yup';\nimport { Layout } from \"components/Layout/Layout\"\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/operations\";\nimport { useAuth } from \"hooks/useAuth\";\nimport { Navigate } from \"react-router-dom\";\n\n\nconst schema = yup.object().shape({\n    email: yup.string().email('Invalid email').required('Required'),\n    password: yup.string().required().min(8, 'Min 8 symbols')\n})\n\nconst LogIn = () => {\n    const {isLoggedIn} =useAuth()\n    const dispatch = useDispatch()\n    const initialValues = {\n        email: '',\n        password: ''\n    }\n    const handleSubmit = (initialValues, { resetForm }) => {\n        dispatch(logIn(initialValues))\n        resetForm()        \n    }\n\n    return <Layout>\n        {isLoggedIn && <Navigate to=\"/tasks\" replace={true}/>}\n        <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}>\n            <Form>\n                <p>Email</p>\n                <Field type='email' name='email' />\n                <ErrorMessage name=\"email\"/>\n                <p>Password</p>\n                <Field type='text' name='password' />\n                <ErrorMessage name=\"password\" />\n                <button type='submit'>Log In</button>\n            </Form>\n        </Formik>\n    </Layout>\n}\n\nexport default LogIn","export const selectUser = state => state.auth.user\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn\nexport const selectIsRefreshing = state=> state.auth.isRefreshing"],"names":["Layout","children","className","css","useAuth","isLoggedIn","useSelector","selectIsLoggedIn","isRefreshing","selectIsRefreshing","user","selectUser","schema","yup","shape","email","required","password","min","dispatch","useDispatch","to","replace","initialValues","validationSchema","onSubmit","resetForm","logIn","type","name","state","auth"],"sourceRoot":""}